# Generated by Django 5.2.4 on 2025-07-15 07:26

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='环境名称')),
                ('description', models.TextField(blank=True, verbose_name='环境描述')),
                ('is_active', models.BooleanField(default=True, verbose_name='是否启用')),
                ('is_default', models.BooleanField(default=False, verbose_name='是否为默认环境')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='environments', to=settings.AUTH_USER_MODEL, verbose_name='创建者')),
            ],
            options={
                'verbose_name': '测试环境',
                'verbose_name_plural': '测试环境',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EnvironmentUsageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('api_test', 'API测试'), ('test_plan', '测试计划执行'), ('manual_test', '手动测试')], max_length=50, verbose_name='使用场景')),
                ('used_at', models.DateTimeField(auto_now_add=True, verbose_name='使用时间')),
                ('context', models.JSONField(default=dict, verbose_name='使用上下文')),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usage_logs', to='environments.environment', verbose_name='使用的环境')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='environment_usage_logs', to=settings.AUTH_USER_MODEL, verbose_name='使用者')),
            ],
            options={
                'verbose_name': '环境使用日志',
                'verbose_name_plural': '环境使用日志',
                'ordering': ['-used_at'],
            },
        ),
        migrations.CreateModel(
            name='EnvironmentVariable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100, verbose_name='变量名')),
                ('value', models.TextField(verbose_name='变量值')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='变量描述')),
                ('is_secret', models.BooleanField(default=False, verbose_name='是否为敏感信息')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('environment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variables', to='environments.environment', verbose_name='所属环境')),
            ],
            options={
                'verbose_name': '环境变量',
                'verbose_name_plural': '环境变量',
                'ordering': ['key'],
            },
        ),
        migrations.AddConstraint(
            model_name='environment',
            constraint=models.UniqueConstraint(condition=models.Q(('is_default', True)), fields=('created_by',), name='unique_default_environment_per_user'),
        ),
        migrations.AddConstraint(
            model_name='environmentvariable',
            constraint=models.UniqueConstraint(fields=('environment', 'key'), name='unique_variable_per_environment'),
        ),
    ]
